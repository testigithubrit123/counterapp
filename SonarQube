pipeline {
    agent any

    tools {
        maven 'Maven 3.8.7'
    }

    environment {
        SONAR_SCANNER_HOME = tool 'SonarScanner'
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'github1_credential18', url: 'https://github.com/testigithubrit123/counterapp', branch: 'main'
            }
        }

        stage('Build with Maven') {
            steps {
                sh 'mvn clean install'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('My SonarQube Server') {
                    withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                        sh """
                            ${SONARQUBE_SCANNER}/bin/sonar-scanner \
                              -Dsonar.projectKey=counterapp \
                              -Dsonar.sources=. \
                              -Dsonar.java.binaries=target/classes \
                              -Dsonar.login=$SONAR_TOKEN
                        """
                }
            }
        }
    }
}
stage('SonarQube Quality Gate') {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}

        
    

                
                
            
        

                
